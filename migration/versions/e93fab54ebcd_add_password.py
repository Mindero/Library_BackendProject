"""add password

Revision ID: e93fab54ebcd
Revises: 15f8b2c5d867
Create Date: 2024-12-01 13:11:17.472626

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from src.project.core.config import settings
from src.project.api.authorization.hash import get_password_hash

# revision identifiers, used by Alembic.
revision: str = 'e93fab54ebcd'
down_revision: Union[str, None] = '15f8b2c5d867'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Добавляем столбец без ограничения NOT NULL
    op.add_column('readers', sa.Column('password', sa.String(255)), schema=settings.POSTGRES_SCHEMA)

    # Обновляем существующие записи, чтобы заполнить столбец
    op.execute(f"UPDATE my_app_schema.readers SET password = '{get_password_hash('default_password')}'")

    # Устанавливаем ограничение NOT NULL
    op.alter_column('readers', 'password', nullable=False, schema=settings.POSTGRES_SCHEMA)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('readers', sa.Column('passport', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    #               schema=settings.POSTGRES_SCHEMA)
    # op.create_unique_constraint('readers_passport_key', 'readers', ['passport'], schema=settings.POSTGRES_SCHEMA)
    op.drop_column('readers', 'password', schema=settings.POSTGRES_SCHEMA)
    # ### end Alembic commands ###
