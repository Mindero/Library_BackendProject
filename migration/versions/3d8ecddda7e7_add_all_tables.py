"""add_all_tables

Revision ID: 3d8ecddda7e7
Revises: 03b13ad5ee7f
Create Date: 2024-11-07 11:08:08.394158

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from src.project.core.config import settings

# revision identifiers, used by Alembic.
revision: str = '3d8ecddda7e7'
down_revision: Union[str, None] = '03b13ad5ee7f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
                    sa.Column('id_author', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.Column('country', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.Column('birthday', sa.Date(), nullable=False),
                    sa.PrimaryKeyConstraint('id_author'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('books',
                    sa.Column('id_book', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.Column('year', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id_book'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('genres',
                    sa.Column('id_genre', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.PrimaryKeyConstraint('id_genre'),
                    sa.UniqueConstraint('name'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('penalty',
                    sa.Column('id_authors_book', sa.Integer(), nullable=False),
                    sa.Column('start_time', sa.Date(), nullable=False),
                    sa.Column('payment', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id_authors_book'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('publishers',
                    sa.Column('id_publisher', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.Column('inn', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.Column('country', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.PrimaryKeyConstraint('id_publisher'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('readers',
                    sa.Column('reader_ticket', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.Column('email', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
                    sa.Column('phone_number', sa.String().with_variant(sa.String(length=255), 'postgresql'),
                              nullable=False),
                    sa.Column('passport', sa.String().with_variant(sa.String(length=255), 'postgresql'),
                              nullable=False),
                    sa.Column('created_date', sa.Date(), nullable=False),
                    sa.PrimaryKeyConstraint('reader_ticket'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('passport'),
                    sa.UniqueConstraint('phone_number'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('authors_book',
                    sa.Column('id_authors_book', sa.Integer(), nullable=False),
                    sa.Column('id_book', sa.Integer(), nullable=False),
                    sa.Column('id_author', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id_authors_book'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('book_genres',
                    sa.Column('id_book_genres', sa.Integer(), nullable=False),
                    sa.Column('id_book', sa.Integer(), nullable=False),
                    sa.Column('id_genre', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id_book_genres'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('book_publisher',
                    sa.Column('id_book_publisher', sa.Integer(), nullable=False),
                    sa.Column('id_book', sa.Integer(), nullable=False),
                    sa.Column('id_publisher', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id_book_publisher'),
                    sa.UniqueConstraint('id_book', 'id_publisher', name='_book_publisher_uc'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('book_instance',
                    sa.Column('id_instance', sa.Integer(), nullable=False),
                    sa.Column('id_book_publisher', sa.Integer(), nullable=False),
                    sa.Column('supply_date', sa.Date(), nullable=False),
                    sa.Column('taken_now', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id_instance'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    op.create_table('book_reader',
                    sa.Column('id_book_reader', sa.Integer(), nullable=False),
                    sa.Column('reader_ticket', sa.Integer(), nullable=False),
                    sa.Column('id_instance', sa.Integer(), nullable=False),
                    sa.Column('borrow_date', sa.Date(), nullable=False),
                    sa.Column('end_date', sa.Date(), nullable=False),
                    sa.PrimaryKeyConstraint('id_book_reader'),
                    schema=settings.POSTGRES_SCHEMA
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('penalty', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('book_reader', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('book_instance', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('book_publisher', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('book_genres', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('authors_book', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('readers', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('publishers', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('genres', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('books', schema=settings.POSTGRES_SCHEMA)
    op.drop_table('authors', schema=settings.POSTGRES_SCHEMA)
    # ### end Alembic commands ###
