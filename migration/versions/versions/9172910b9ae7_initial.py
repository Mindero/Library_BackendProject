"""initial

Revision ID: 9172910b9ae7
Revises: 
Create Date: 2024-10-30 16:13:06.443482

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9172910b9ae7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('authors_book', schema='my_app_schema')
    op.drop_table('book_publisher', schema='my_app_schema')
    op.drop_table('publishers', schema='my_app_schema')
    op.drop_table('authors', schema='my_app_schema')
    op.drop_table('books', schema='my_app_schema')
    op.drop_table('readers', schema='my_app_schema')
    op.drop_table('book_reader', schema='my_app_schema')
    op.drop_table('book_genres', schema='my_app_schema')
    op.drop_table('genres', schema='my_app_schema')
    op.drop_table('book_instance', schema='my_app_schema')
    op.drop_table('penalty', schema='my_app_schema')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('penalty',
    sa.Column('id_book_reader', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_time', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('payment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_book_reader'], ['my_app_schema.book_reader.id_book_reader'], name='penalty_id_book_reader_fkey'),
    sa.PrimaryKeyConstraint('id_book_reader', name='penalty_pkey'),
    schema='my_app_schema'
    )
    op.create_table('book_instance',
    sa.Column('id_instance', sa.INTEGER(), server_default=sa.text("nextval('my_app_schema.book_instance_id_instance_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('id_book_publisher', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('supply_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('taken_now', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_book_publisher'], ['my_app_schema.book_publisher.id_book_publisher'], name='book_instance_id_book_publisher_fkey'),
    sa.PrimaryKeyConstraint('id_instance', name='book_instance_pkey'),
    schema='my_app_schema',
    postgresql_ignore_search_path=False
    )
    op.create_table('genres',
    sa.Column('id_genre', sa.INTEGER(), server_default=sa.text("nextval('my_app_schema.genres_id_genre_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id_genre', name='genres_pkey'),
    sa.UniqueConstraint('name', name='genres_name_key'),
    schema='my_app_schema',
    postgresql_ignore_search_path=False
    )
    op.create_table('book_genres',
    sa.Column('id_book_genres', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_book', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_genre', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_book'], ['my_app_schema.books.id_book'], name='book_genres_id_book_fkey'),
    sa.ForeignKeyConstraint(['id_genre'], ['my_app_schema.genres.id_genre'], name='book_genres_id_genre_fkey'),
    sa.PrimaryKeyConstraint('id_book_genres', name='book_genres_pkey'),
    schema='my_app_schema'
    )
    op.create_table('book_reader',
    sa.Column('id_book_reader', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('reader_ticket', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_instance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('borrow_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_instance'], ['my_app_schema.book_instance.id_instance'], name='book_reader_id_instance_fkey'),
    sa.ForeignKeyConstraint(['reader_ticket'], ['my_app_schema.readers.reader_ticket'], name='book_reader_reader_ticket_fkey'),
    sa.PrimaryKeyConstraint('id_book_reader', name='book_reader_pkey'),
    schema='my_app_schema'
    )
    op.create_table('readers',
    sa.Column('reader_ticket', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('passport', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('created_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.CheckConstraint("email::text ~ '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$'::text", name='readers_email_check'),
    sa.CheckConstraint("phone_number::text ~ '^\\+?[0-9\\s\\-()]+$'::text", name='readers_phone_number_check'),
    sa.PrimaryKeyConstraint('reader_ticket', name='readers_pkey'),
    sa.UniqueConstraint('email', name='readers_email_key'),
    sa.UniqueConstraint('passport', name='readers_passport_key'),
    sa.UniqueConstraint('phone_number', name='readers_phone_number_key'),
    schema='my_app_schema'
    )
    op.create_table('books',
    sa.Column('id_book', sa.INTEGER(), server_default=sa.text("nextval('my_app_schema.books_id_book_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint("year >= '-1000'::integer AND year < 2025", name='books_year_check'),
    sa.PrimaryKeyConstraint('id_book', name='books_pkey'),
    schema='my_app_schema',
    postgresql_ignore_search_path=False
    )
    op.create_table('authors',
    sa.Column('id_author', sa.INTEGER(), server_default=sa.text("nextval('my_app_schema.authors_id_author_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('birthday', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id_author', name='authors_pkey'),
    schema='my_app_schema',
    postgresql_ignore_search_path=False
    )
    op.create_table('publishers',
    sa.Column('id_publisher', sa.INTEGER(), server_default=sa.text("nextval('my_app_schema.publishers_id_publisher_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('inn', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('length(inn::text) = 10 OR length(inn::text) = 12', name='publishers_inn_check'),
    sa.PrimaryKeyConstraint('id_publisher', name='publishers_pkey'),
    sa.UniqueConstraint('inn', name='publishers_inn_key'),
    schema='my_app_schema',
    postgresql_ignore_search_path=False
    )
    op.create_table('book_publisher',
    sa.Column('id_book_publisher', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_book', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_publisher', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_book'], ['my_app_schema.books.id_book'], name='book_publisher_id_book_fkey'),
    sa.ForeignKeyConstraint(['id_publisher'], ['my_app_schema.publishers.id_publisher'], name='book_publisher_id_publisher_fkey'),
    sa.PrimaryKeyConstraint('id_book_publisher', name='book_publisher_pkey'),
    sa.UniqueConstraint('id_book', 'id_publisher', name='book_publisher_id_book_id_publisher_key'),
    schema='my_app_schema'
    )
    op.create_table('authors_book',
    sa.Column('id_authors_book', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_book', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_author', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_author'], ['my_app_schema.authors.id_author'], name='authors_book_id_author_fkey'),
    sa.ForeignKeyConstraint(['id_book'], ['my_app_schema.books.id_book'], name='authors_book_id_book_fkey'),
    sa.PrimaryKeyConstraint('id_authors_book', name='authors_book_pkey'),
    schema='my_app_schema'
    )
    # ### end Alembic commands ###
